// scss-lint:disable SelectorFormat ElsePlacement

@mixin _text-input-padding($t-step: 0, $x-step: 0, $b-step: 0) {
  // Reduce all padding values by 2px to account for border width
  // Fudge top padding by +1px and bottom by -1px for better text alignment
  $top: modular-scale-px($t-step) - $border-width + 1px;
  $bottom: modular-scale-px($b-step) - $border-width - 1px;
  $horizontal: modular-scale-px($x-step) - $border-width;
  padding: $top $horizontal $bottom;
}

@mixin text-input-sizer($size: 'medium') {
  @if $size == 'small' {
    @include _text-input-padding(-6, -3, -5);
    font-size: $font-size-2;
  }

  @else if $size == 'medium' {
    @include _text-input-padding(-3, 0, -2);
    font-size: $font-size-3;
  }

  @else if $size == 'large' {
    @include _text-input-padding(0, 2, 1);
    font-size: $font-size-4;
  }
}

.TextInput {
  @include text-input-sizer;
  -webkit-appearance: none;
  border: $border-width solid $gray-300;
  border-radius: $border-radius;
  color: var(--text-color-primary);
  line-height: $line-height-base;
  width: 100%;

  &::placeholder {
    color: var(--text-color-hint);
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }
}

.TextInput:focus {
  border-color: var(--focus-color);
  box-shadow: 0 0 11px rgba($blue-100, $alpha-500);
  outline: 0;
}

.TextInput:disabled,
.TextInput[readonly] {
  background: $gray-200;
  border-color: $gray-200;
  color: var(--text-color-hint);
  cursor: not-allowed;
  opacity: 1; // some browsers (e.g. iOS Safari) reduce opacity
}

.TextInput--has-error,
.FormGroup--has-error .TextInput {
  border-color: var(--error-color);

  &.TextInput:focus {
    box-shadow: 0 0 11px rgba($red-100, $alpha-600);
  }
}

//
// Sizers
//

@if $enable-responsive-form-components {
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $suffix: breakpoint-suffix($breakpoint, $grid-breakpoints);
      // Sacrificing some BEM purity and styling .TextInput nested inside
      // .FormGroup here to avoid having tons of duplicate styles
      .TextInput--medium#{$suffix},
      .FormGroup--medium#{$suffix} .TextInput {
        @include text-input-sizer;
      }

      .TextInput--small#{$suffix},
      .FormGroup--small#{$suffix} .TextInput {
        @include text-input-sizer('small');
      }

      .TextInput--large#{$suffix},
      .FormGroup--large#{$suffix} .TextInput {
        @include text-input-sizer('large');
      }
    }
  }
} @else {
  .TextInput--small { @include text-input-sizer('small'); }
  .TextInput--large { @include text-input-sizer('large'); }
}
