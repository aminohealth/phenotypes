// scss-lint:disable SelectorFormat ElsePlacement StringQuotes

@import '../../styles/lib/str-replace';

// Checkbox based on Bootstrap's "custom control"
// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_custom-forms.scss

@mixin checkbox-sizer($size: 'medium') {
  @if $size == 'small' {
    $width: modular-scale-px(-1);

    @include text-1;
    padding-left: $width + $spacer-2;

    .Checkbox__indicator {
      background-position: 1px 1px;
      background-size: 8px 8px;
      height: $width;
      top: 1px;
      width: $width;
    }
  }

  @else if $size == 'medium' {
    $width: modular-scale-px(0);

    @include text-2;
    padding-left: $width + $spacer-2;

    .Checkbox__indicator {
      background-position: 1px 2px;
      background-size: 10px 9px;
      height: $width;
      top: 1px;
      width: $width;
    }
  }

  @else if $size == 'large' {
    $width: modular-scale-px(2);

    @include text-4;
    padding-left: $width + $spacer-3;

    .Checkbox__indicator {
      background-position: 2px 3px;
      background-size: 14px 11px;
      height: $width;
      top: 2px;
      width: $width;
    }
  }
}

@mixin checkbox-icon($fill: $white, $fill-opacity: 1) {
  background-image: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 9'%3E%3Cpolygon fill='#{$fill}' fill-opacity='#{$fill-opacity}' points='3.5 5.45 1.5 3.45 0 4.95 3.5 8.45 10 1.95 8.5 .45'/%3E%3C/svg%3E%0A"), '#', '%23');
}

.Checkbox {
  @include checkbox-sizer;
  display: inline-block;
  margin: 0;
  position: relative;
}

.Checkbox__input {
  opacity: 0;
  position: absolute;
  z-index: -1;

  &:focus ~ .Checkbox__indicator {
    border-color: $blue-100;
    box-shadow: 0 0 11px rgba($blue-100, $alpha-500);
  }

  &:active ~ .Checkbox__indicator {
    background-color: $gray-100;
    border-color: $gray-400;
  }

  &:checked ~ .Checkbox__indicator {
    @include checkbox-icon;
    background-color: $gray-800;
    border-color: $gray-800;
  }

  &:checked:focus ~ .Checkbox__indicator {
    border-color: $gray-800;
    box-shadow: 0 0 0 2px rgba($blue-200, $alpha-400);
  }

  &:checked:active ~ .Checkbox__indicator {
    @include checkbox-icon($fill-opacity: $alpha-600);
    background-color: $gray-800;
    border-color: $gray-800;
  }

  &:disabled ~ .Checkbox__indicator,
  &:disabled:active ~ .Checkbox__indicator,
  &:disabled:checked:active {
    background-color: $gray-200;
    border-color: $gray-200;
  }

  &:disabled:checked ~ .Checkbox__indicator,
  &:disabled:checked:active ~ .Checkbox__indicator {
    @include checkbox-icon($fill: $gray-400);
  }

  &:disabled ~ .Checkbox__label {
    color: $text-color-secondary;
  }
}

.Checkbox__indicator {
  background-color: $white;
  background-repeat: no-repeat;
  border: $border-width solid $gray-300;
  border-radius: $border-radius;
  left: 0;
  pointer-events: none;
  position: absolute;
  user-select: none;
}

.Checkbox--small {
  @include checkbox-sizer('small');
}

.Checkbox--large {
  @include checkbox-sizer('large');
}

@if $enable-form-utilities {
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $suffix: breakpoint-suffix($breakpoint, $grid-breakpoints);

      .Checkbox--medium#{$suffix} { @include checkbox-sizer; }
      .Checkbox--small#{$suffix} { @include checkbox-sizer('small'); }
      .Checkbox--large#{$suffix} { @include checkbox-sizer('large'); }
    }
  }
}
