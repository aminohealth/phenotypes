// scss-lint:disable SelectorFormat ElsePlacement
@mixin button-sizer($size: 'medium') {
  @if $size == 'small' {
    font-size: $font-size-2;
  }

  @else if $size == 'medium' {
    font-size: $font-size-3;
    line-height: $line-height-base;
    padding: modular-scale-px(-3) modular-scale-px(3) modular-scale-px(-2);
  }

  @else if $size == 'large' {
    font-size: $font-size-4;
  }
}

%button-disabled {
  color: $text-color-primary;
  opacity: $alpha-600;
  pointer-events: none;
}

.Button {
  @include button-sizer;
  background: rgba($black, $alpha-200);
  border: 0;
  border-radius: $border-radius;
  color: $text-color-primary;
  cursor: pointer;
  display: inline-block;
  font-weight: $font-weight-normal;
  text-align: center;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;

  &:hover,
  &.hover,
  &:focus,
  &.focus {
    background: rgba($black, $alpha-200 + .05);
    color: $text-color-primary;
    text-decoration: none;
  }

  &:disabled,
  &.disabled {
    @extend %button-disabled;
  }

  &:active,
  &.active {
    background: rgba($black, $alpha-200 + .11);
  }
}

.Button--danger {
  background: $red;
}

.Button--primary {
  background: $blue;
}

.Button--link {
  background: transparent;
}

.Button--is-disabled {
  @extend %button-disabled;
}

.Button--small {
  @include button-sizer($size: 'small');
}

.Button--large {
  @include button-sizer($size: 'large');
}

@if $enable-form-utilities {
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $suffix: breakpoint-suffix($breakpoint, $grid-breakpoints);
      .Button--medium#{$suffix} { @include button-sizer; }
      .Button--small#{$suffix} { @include button-sizer($size: 'small'); }
      .Button--large#{$suffix} { @include button-sizer($size: 'large'); }
    }
  }
}
