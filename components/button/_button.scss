// scss-lint:disable SelectorFormat ElsePlacement

@mixin button-sizer($size: 'medium') {
  @if $size == 'small' {
    font-size: $font-size-2;
    padding: modular-scale-px(-6) modular-scale-px(-1) modular-scale-px(-5);
  }

  @else if $size == 'medium' {
    font-size: $font-size-3;
    padding: modular-scale-px(-3) modular-scale-px(2) modular-scale-px(-2);
  }

  @else if $size == 'large' {
    font-size: $font-size-4;
    padding: modular-scale-px(0) modular-scale-px(4) modular-scale-px(1);
  }
}

// Basic button
// ------------

.Button {
  // scss-lint:disable PropertySortOrder
  @include button-sizer;
  background: rgba($black, $alpha-200);
  border: 0;
  border-radius: $border-radius;
  color: $text-color-primary;
  cursor: pointer;
  display: inline-block;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  text-align: center;
  transition: all .2s ease-out;
  vertical-align: middle;
  white-space: nowrap;

  // scss-lint:disable VendorPrefix
  // TODO: Add Autoprefixer
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}

.Button:hover,
.Button:focus,
.Button--is-hovered,
.Button--is-focused {
  @include depth(4);
  background: rgba($black, $alpha-200 + .05);
  color: $text-color-primary;
  text-decoration: none;
  transform: translateY(-2.25px) scaleX(1.015) scaleY(1.015);
  transition-duration: .08s;
}

.Button:disabled,
.Button--is-disabled {
  opacity: $alpha-600;
  pointer-events: none;
}

.Button:active,
.Button--is-active {
  @include depth(0);
  background: rgba($black, $alpha-200 + .11);
  transform: translateY(0) scaleX(1) scaleY(1);
  transition-duration: 0s;
}

// Allow focus indicator when tabbing but hide it if clicking
.Button:active:focus {
  outline: 0;
}

// Danger button
// -------------

.Button--danger {
  @include reversed-text;
  background: $red;

  &:hover,
  &:focus,
  &.Button--is-hovered,
  &.Button--is-focused {
    background: darken($red, 5);
    color: $white;
  }

  &:active,
  &.Button--is-active {
    background: darken($red, 11);
  }
}

// Primary button
// --------------

.Button--primary {
  @include depth(4);
  @include reversed-text($font-weight: $font-weight-bold);
  background: $blue;

  &:hover,
  &:focus,
  &.Button--is-hovered,
  &.Button--is-focused {
    @include depth(7);
    background: darken($blue, 5);
    color: $white;
  }

  &:active,
  &.Button--is-active {
    @include depth(0);
    background: darken($blue, 11);
  }
}

// Link style button
// -----------------

.Button--link {
  background: transparent;
  color: $blue;

  &:hover,
  &:focus,
  &.Button--is-hovered,
  &.Button--is-focused {
    background: rgba($black, .05);
    color: $blue-300;
  }

  &:active,
  &.Button--is-active {
    background: rgba($black, .11);
    color: $blue-400;
  }
}

// Touch devices
// -------------
// Touch devices apply the hover state when a button is tapped,
// so we use that in place of the active state. Since there's no
// hovering on a touch device, we remove the hover transitions too.

// Note: remember to include an ontouchstart listener on the document
// This: document.addEventListener("touchstart", function() {},false);
// Or this: <body ontouchstart="">

@media (pointer: coarse), (any-pointer: coarse) {
  .Button:hover,
  .Button--is-hovered {
    @include depth(0);
    background: rgba($black, $alpha-200 + .11);
    transform: translateY(1px) scaleX(.985) scaleY(.985);
  }

  .Button--danger {
    &:hover,
    &.Button--is-hovered {
      background: darken($red, 11);
    }
  }

  .Button--primary {
    &:hover,
    &.Button--is-hovered {
      @include depth(0);
      background: darken($blue, 11);
    }
  }

  .Button--link {
    &:hover,
    &.Button--is-hovered {
      background: rgba($black, .11);
      color: $blue-400;
    }
  }
}

// Sizers and responsive utilities
// -------------------------------

@if $enable-form-utilities {
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $suffix: breakpoint-suffix($breakpoint, $grid-breakpoints);
      .Button--medium#{$suffix} { @include button-sizer; }
      .Button--small#{$suffix} { @include button-sizer('small'); }
      .Button--large#{$suffix} { @include button-sizer('large'); }
    }
  }
} @else {
  .Button--small { @include button-sizer('small'); }
  .Button--large { @include button-sizer('large'); }
}
