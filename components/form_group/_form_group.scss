// scss-lint:disable SelectorFormat
@mixin form-group-sizer($size: 'medium') {
  @if $size == 'small' {
    .FormGroup__label,
    .FormGroup__error,
    .FormGroup__hint {
      font-size: $font-size-1;
    }
  }

  @if $size == 'medium' {
    .FormGroup__label,
    .FormGroup__error {
      font-size: $font-size-2;
    }

    .FormGroup__hint {
      font-size: $font-size-1;
    }
  }

  @if $size == 'large' {
    .FormGroup__label,
    .FormGroup__error {
      font-size: $font-size-4;
    }

    .FormGroup__hint {
      font-size: $font-size-2;
    }
  }

  .FormGroup__control {
    @include text-input-sizer($size: $size);
    // @include other sizers for future control types
  }
}

.FormGroup__error { color: $red; }

.FormGroup__label { font-weight: $font-weight-bold; }

.FormGroup--has-error {
  .FormGroup__control {
    @include text-input-error-state;
    // @include other error states for future control types
  }
}

//
// Sizers
//

@include form-group-sizer;

.FormGroup--small { @include form-group-sizer($size: 'small'); }

.FormGroup--large { @include form-group-sizer($size: 'large'); }

@if $enable-form-utilities {
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $suffix: breakpoint-suffix($breakpoint, $grid-breakpoints);
      .FormGroup--small#{$suffix} { @include form-group-sizer($size: 'small'); }
      .FormGroup--medium#{$suffix} { @include form-group-sizer; }
      .FormGroup--large#{$suffix} { @include form-group-sizer($size: 'large'); }
    }
  }
}
